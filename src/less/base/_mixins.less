//
// Mixins
// Snippets of reusable CSS to develop faster
// and keep code readable
// -----------------------------------------------------------------

// Sizing & Layout
// -------------------------
  // Set width and height
  .size(@height, @width) {
    height: @height;
    width: @width;
  }
  // Make a square
  .square(@size) {
    .size(@size, @size);
  }
  // Set the box model to use
  .user-select(@userselect) {
      -webkit-touch-callout: @userselect;
        -webkit-user-select: @userselect;
         -khtml-user-select: @userselect;
           -moz-user-select: @userselect;
            -ms-user-select: @userselect;
                user-select: @userselect;
  }
  // Grid
  #grid {
    .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {

      .spanX (@index) when (@index > 0) {
        .span@{index} { .span(@index); }
        .spanX(@index - 1);
      }
      .spanX (0) {}

      .offsetX (@index) when (@index > 0) {
        .offset@{index} { .offset(@index); }
        .offset@{index}:first-child { .offsetFirstChild(@index); }
        .offsetX(@index - 1);
      }
      .offsetX (0) {}

      .offset (@columns) {
        margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth*2);
        *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + (@fluidGridGutterWidth*2) - (.5 / @gridRowWidth * 100 * 1%);
      }

      .offsetFirstChild (@columns) {
        margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth);
        *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
      }

      .span (@columns) {
        width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
        *width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%);
      }

      .row {
        width: 100%;
        .clearfix();

        // Space grid-sized controls properly if multiple per line
        .controls-row [class*="span"] + [class*="span"] {
          margin-left: @fluidGridGutterWidth;
        }

        // generate .spanX and .offsetX
        .spanX (@gridColumns);
        .offsetX (@gridColumns);
      }

    }
  }

// Various Shortcuts
// ---------------------------
  // Drop shadows
  .box-shadow(@shadow) {
    -webkit-box-shadow: @shadow;
       -moz-box-shadow: @shadow;
            box-shadow: @shadow;
  }
  // Background sizing
  .background-size(@size){
    -webkit-background-size: @size;
       -moz-background-size: @size;
         -o-background-size: @size;
            background-size: @size;
  }
  // Border Radius
  .border-radius(@radius) {
    -webkit-border-radius: @radius;
       -moz-border-radius: @radius;
            border-radius: @radius;
  }
  // Opacity
  .opacity(@opacity) {
    opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
  }


// Transformations
// ---------------------------
  .transform-origin(@x, @y) {
    -webkit-transform-origin: @x @y;
       -moz-transform-origin: @x @y;
        -ms-transform-origin: @x @y;
         -o-transform-origin: @x @y;
            transform-origin: @x @y;
  }
  .rotate(@degrees) {
    -webkit-transform: rotate(@degrees);
       -moz-transform: rotate(@degrees);
        -ms-transform: rotate(@degrees);
         -o-transform: rotate(@degrees);
            transform: rotate(@degrees);
  }
  .scale(@ratio) {
    -webkit-transform: scale(@ratio);
       -moz-transform: scale(@ratio);
        -ms-transform: scale(@ratio);
         -o-transform: scale(@ratio);
            transform: scale(@ratio);
  }
  .translate(@x, @y) {
    -webkit-transform: translate(@x, @y);
       -moz-transform: translate(@x, @y);
        -ms-transform: translate(@x, @y);
         -o-transform: translate(@x, @y);
            transform: translate(@x, @y);
  }
  .skew(@x, @y) {
    -webkit-transform: skew(@x, @y);
       -moz-transform: skew(@x, @y);
        -ms-transform: skew(@x, @y);
         -o-transform: skew(@x, @y);
            transform: skew(@x, @y);
  }
  .translate3d(@x, @y, @z) {
    -webkit-transform: translate3d(@x, @y, @z);
       -moz-transform: translate3d(@x, @y, @z);
        -ms-transform: translate3d(@x, @y, @z);
         -o-transform: translate3d(@x, @y, @z);
            transform: translate3d(@x, @y, @z);
  }
  .transition(@transition) {
    -webkit-transition: @transition;
       -moz-transition: @transition;
        -ms-transition: @transition;
         -o-transition: @transition;
            transition: @transition;
  }


// Clearfix
// ---------------------------
  // For clearing floats like a boss h5bp.com/q
  .clearfix {
    *zoom: 1;
    &:before,
    &:after {
      display: table;
      content: "";
    }
    &:after {
      clear: both;
    }
  }



// Carats
// ---------------------------
  #caret {
    .north(@arrowWidth: 5px, @color: #000) {
      border-left: @arrowWidth solid transparent;
      border-right: @arrowWidth solid transparent;
      border-bottom: @arrowWidth solid @color;
      border-top: 0;
    }
    .east(@arrowWidth: 5px, @color: #000) {
      border-top: @arrowWidth solid transparent;
      border-bottom: @arrowWidth solid transparent;
      border-left: @arrowWidth solid @color;
      border-right: 0;
    }
    .south(@arrowWidth: 5px, @color: #000) {
      border-left: @arrowWidth solid transparent;
      border-right: @arrowWidth solid transparent;
      border-top: @arrowWidth solid @color;
      border-bottom: 0;
    }
    .west(@arrowWidth: 5px, @color: #000) {
      border-top: @arrowWidth solid transparent;
      border-right: @arrowWidth solid @color;
      border-bottom: @arrowWidth solid transparent;
      border-left: 0;
    }
  }

// Gradients
// ---------------------------
  #gradient {
    .horizontal(@startColor: #555, @endColor: #333) {
      background-color: @endColor;
      background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
      background-image: -ms-linear-gradient(left, @startColor, @endColor); // IE10
      background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
      background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
      background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
      background-image: linear-gradient(left, @startColor, @endColor); // Le standard
      background-repeat: repeat-x;
    }
    .vertical(@startColor: #555, @endColor: #333, @fallback: @endColor) {
      background-color: @fallback;
      background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
      background-image: -ms-linear-gradient(top, @startColor, @endColor); // IE10
      background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
      background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
      background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
      background-image: linear-gradient(top, @startColor, @endColor); // The standard
      background-repeat: repeat-x;
    }
    .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
      background-color: @endColor;
      background-repeat: repeat-x;
      background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
      background-image: -ms-linear-gradient(@deg, @startColor, @endColor); // IE10
      background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
      background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
      background-image: linear-gradient(@deg, @startColor, @endColor); // The standard
    }
    .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
      background-color: mix(@midColor, @endColor, 80%);
      background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
      background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
      background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
      background-image: -ms-linear-gradient(@startColor, @midColor @colorStop, @endColor);
      background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
      background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
      background-repeat: no-repeat;
    }
    .radial(@innerColor: #555, @outerColor: #333)  {
      background-color: @outerColor;
      background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
      background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
      background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
      background-image: -ms-radial-gradient(circle, @innerColor, @outerColor);
      background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
      background-repeat: no-repeat;
    }
    .striped(@color, @angle: -45deg) {
      background-color: @color;
      background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
      background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
      background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
      background-image: -ms-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
      background-image: -o-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
      background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    }
  }


// Buttons
.button-style(@accent-color, @text-color: #fff) {
  #gradient > .vertical(
    lighten(@accent-color, 5%),
    @accent-color
  );
  border: 0;
  color: @text-color;

  &:hover {
    #gradient > .vertical(
      @accent-color,
      darken(@accent-color, 5%),
    );
    color: @text-color;
  }

  &:active {
    #gradient > .vertical(
      darken(@accent-color, 5%),
      @accent-color
    );
  }
}


// Font Face
.font-face(@fontname, @fontfile, @fontweight:normal, @fontstyle:normal) {
  @font-face{
    font-family: "@{fontname}";
    src: url("@{fontfile}.eot");
    src: url("@{fontfile}.eot?#iefix") format("embedded-opentype"),
         url("@{fontfile}.woff") format("woff"),
         url("@{fontfile}.ttf") format("truetype"),
         url("@{fontfile}.svg#@{fontname}") format("svg");
    font-weight: @fontweight;
    font-style: @fontstyle;
  }
}

